WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:12.800
大家好，在这个视频中，我将删除中间的重复点，保留

00:00:12.800 --> 00:00:24.540
仅最外面的点，我会按顺序进行，左边和右边，顶部和底部。

00:00:24.540 --> 00:00:31.360
现在我只需针对右侧和左侧进行调试。

00:00:31.360 --> 00:00:41.240
右键，选择断开节点链接，连接右侧，连接左侧。

00:00:41.240 --> 00:00:45.360
回到层面。

00:00:45.360 --> 00:00:51.000
左边有两个点，右边有两个点，所以我只选择

00:00:51.000 --> 00:00:57.760
四个点，并删除中间的重复点。

00:00:57.760 --> 00:01:01.280
回到图表。

00:01:01.280 --> 00:01:04.200
现在我只需进行正确的调试。

00:01:04.200 --> 00:01:06.000
回到层面。

00:01:06.000 --> 00:01:16.960
我保留右侧的两个点，并删除与左侧重复的四个点。

00:01:16.960 --> 00:01:33.240
我将使用差异，在这种情况下，我将选择最小值，而不是二进制，以获得正确的

00:01:33.240 --> 00:01:34.640
边。

00:01:34.640 --> 00:01:41.400
我想删除与左侧重复的点，因此我将连接左侧，到

00:01:41.400 --> 00:01:53.920
差异，检查此节点，单击此处，并注意源必须是

00:01:53.920 --> 00:02:01.360
右边的点为相同点，左边的点为差异点。

00:02:01.360 --> 00:02:04.200
在这里我选择输入源。

00:02:04.200 --> 00:02:14.520
最初，右边有六个点，处理输出后，我只保留

00:02:14.520 --> 00:02:22.320
两点，这就是两点。

00:02:22.320 --> 00:02:33.960
我就连接去调试，这两点就在这里。

00:02:33.960 --> 00:02:37.200
我已经完成了右侧的工作。

00:02:37.200 --> 00:02:42.800
现在我将对左侧进行同样的操作。

00:02:42.800 --> 00:02:47.640
为了使其更容易理解，我将使用调试。

00:02:47.640 --> 00:02:55.880
我将暂时禁用此调试。

00:02:55.880 --> 00:03:02.480
这里我使用轴进行调试，所以我将删除此链接。

00:03:02.480 --> 00:03:04.600
前往层面。

00:03:04.600 --> 00:03:07.640
对于左侧，我将做同样的事情。

00:03:07.640 --> 00:03:14.400
删除右侧重复的四个点。

00:03:14.400 --> 00:03:29.840
这里我要提到差异，我正在处理左边的问题，所以我必须连接

00:03:29.840 --> 00:03:32.420
左输出至源。

00:03:32.420 --> 00:03:38.480
要删除右侧重复的点，并将右侧连接到差异，

00:03:38.480 --> 00:03:49.600
与上述类似，并调试此输出。

00:03:49.600 --> 00:03:50.920
回到层面。

00:03:50.920 --> 00:03:56.640
我只剩左边两点了。

00:03:56.640 --> 00:04:01.080
现在我将对顶部和底部进行处理。

00:04:01.080 --> 00:04:05.020
复制节点差异。

00:04:05.020 --> 00:04:10.720
向前连接到源头，向后连接到差异点。

00:04:10.720 --> 00:04:13.640
再复制一次。

00:04:13.640 --> 00:04:28.000
向后连接到源头，向前连接到差异点。

00:04:28.000 --> 00:04:37.440
现在我将调试所有四个输出。

00:04:37.440 --> 00:04:54.840
将所有输出连接到调试，并删除上面的两个节点。

00:04:54.840 --> 00:04:56.920
回到层面。

00:04:56.920 --> 00:05:03.960
我只剩下这些积分了。

00:05:03.960 --> 00:05:11.260
现在我将使用静态网格生成器来创建一堵墙。

00:05:11.260 --> 00:05:18.360
在使用静态网格生成器之前，我将检查这个节点。

00:05:18.360 --> 00:05:23.680
在输出中我有四个点数据，在生成网格之前，我将合并这些

00:05:23.680 --> 00:05:28.800
点数据合并为一个点数据。

00:05:28.800 --> 00:05:36.600
拖出来并呼叫联合。

00:05:36.600 --> 00:05:45.200
并且联合的输出是一个点数据。

00:05:45.200 --> 00:05:51.200
您可以看到联合的输入和输出都是空间数据。

00:05:51.200 --> 00:05:57.880
如果希望输入输出为点，那么我就不会使用联合。

00:05:57.880 --> 00:06:04.600
我将使用节点合并。

00:06:04.600 --> 00:06:12.480
连接此链接，并删除联合节点。

00:06:12.480 --> 00:06:17.200
检查该节点。

00:06:17.200 --> 00:06:23.560
最初输入有四个点数据，而输出只有一个点数据。

00:06:23.560 --> 00:06:30.360
该节点的工作方式与 union 类似。

00:06:30.360 --> 00:06:37.960
但输入输出的类型是点。

00:06:37.960 --> 00:06:46.320
合并后，我将使用静态网格生成器。

00:06:46.320 --> 00:06:47.520
回到层面。

00:06:47.520 --> 00:06:55.760
我也有这样的墙。

00:06:55.760 --> 00:06:58.520
而且墙的位置也不正确。

00:06:58.520 --> 00:07:16.920
所以在下一个视频中，我将改变墙的偏移量。

