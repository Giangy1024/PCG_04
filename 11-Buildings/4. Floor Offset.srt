WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:11.240
大家好，现在我打开PCG图。

00:00:11.240 --> 00:00:17.960
利用样条采样器的输出，我将拉出并调用调试。

00:00:17.960 --> 00:00:24.560
我将在转换点之前调试输出，以将该输出与网格进行比较

00:00:24.560 --> 00:00:33.360
转换点之后，在调试节点中。

00:00:33.360 --> 00:00:36.360
点网格是一个立方体。

00:00:36.360 --> 00:00:37.880
我会改变它。

00:00:37.880 --> 00:00:39.700
选择轴三脚架。

00:00:39.700 --> 00:00:51.280
为了更清楚地看到轴，这是轴三脚架，如果你没有看到这个网格，

00:00:51.280 --> 00:01:02.160
选择设置，选择显示引擎内容，然后显示插件内容。

00:01:02.160 --> 00:01:05.700
前往层面。

00:01:05.700 --> 00:01:17.560
这是该点的位置，这是从该点生成的网格。

00:01:17.560 --> 00:01:25.880
我希望这个点位于网格的中间，所以我需要将这个网格向下拉，然后

00:01:25.880 --> 00:01:36.080
沿 y 轴向右移动，这意味着我减少 x 轴的值，然后移动

00:01:36.080 --> 00:01:44.760
右边的网格，这意味着我增加 y 轴的值，x 轴的值就会减小，

00:01:44.760 --> 00:01:48.680
并且 y 轴将会增加。

00:01:48.680 --> 00:01:51.200
回到PCG。

00:01:51.200 --> 00:01:57.960
在变换点节点中，我将改变静态网格的偏移量。

00:01:57.960 --> 00:02:04.480
打开图表设置。

00:02:04.480 --> 00:02:10.000
创建新参数。

00:02:10.000 --> 00:02:14.240
将其命名为地板偏移。

00:02:14.240 --> 00:02:20.200
数据类型为向量。

00:02:20.200 --> 00:02:25.800
对于偏移最小值和最大值，我将使用地板偏移。

00:02:25.800 --> 00:02:39.280
将其拉至最大值，并收缩该节点。

00:02:39.280 --> 00:02:48.160
我将进入蓝图，更新地板偏移的值，然后我将更改

00:02:48.160 --> 00:02:57.160
矢量值，所以我复制这两个节点，然后连接执行引脚。

00:02:57.160 --> 00:03:12.080
对于偏移量，我将 x、y 和 z 设置为 0，并将名称更改为偏移量。

00:03:12.080 --> 00:03:16.400
我将再次解释偏移。

00:03:16.400 --> 00:03:24.240
如果你想让这个网格位于这个点的中间，那么我需要拉动这个网格

00:03:24.240 --> 00:03:32.000
向下，表示减小 x 轴，向右移动，表示增加

00:03:32.000 --> 00:03:35.760
y 轴。

00:03:35.760 --> 00:03:39.860
回到蓝图。

00:03:39.860 --> 00:03:48.120
减少 x 使 x 为负值，增加 y 使 y 为正值，在这种情况下，

00:03:48.120 --> 00:03:57.880
网格移动的距离是尺寸的一半，因此我取 350 除以 2，即 175。

00:03:57.880 --> 00:04:02.180
X 等于负 175。

00:04:02.180 --> 00:04:09.360
Y 等于 175，因为增加了 y 轴。

00:04:09.360 --> 00:04:10.440
按编译。

00:04:10.440 --> 00:04:23.800
回到关卡，该点现在位于网格的中间。

00:04:23.800 --> 00:04:26.560
回到蓝图。

00:04:26.560 --> 00:04:36.640
该值是墙宽除以 2，然后乘以负 1 得到的负值。

00:04:36.640 --> 00:04:58.400
乘以 2，然后乘以负 1，并将结果拉入 x。

00:04:58.400 --> 00:05:06.160
y值是正数，所以我选择除以2之后的结果，就是这个。

00:05:06.160 --> 00:05:10.400
选择它作为 y 值。

00:05:10.400 --> 00:05:12.120
按编译。

00:05:12.120 --> 00:05:14.080
并返回到该级别。

00:05:14.080 --> 00:05:15.000
这就是结果。

00:05:15.000 --> 00:05:25.000
[空白音频]

